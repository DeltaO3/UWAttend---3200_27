"""Clean up schema and change student num to string

Revision ID: 3bc372b20e9a
Revises: ac3d6be74091
Create Date: 2024-09-24 09:49:49.495887

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3bc372b20e9a'
down_revision = 'ac3d6be74091'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('consent_given',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.alter_column('studentNumber',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=15),
               existing_nullable=False)
        batch_op.alter_column('consent',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.alter_column('unitName',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_column('active')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(length=320), nullable=False))
        batch_op.alter_column('userType',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=15),
               existing_nullable=False)
        batch_op.drop_constraint('uq_user_uwaID', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('uq_user_email'), ['email'])
        batch_op.drop_column('uwaID')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uwaID', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(batch_op.f('uq_user_email'), type_='unique')
        batch_op.create_unique_constraint('uq_user_uwaID', ['uwaID'])
        batch_op.alter_column('userType',
               existing_type=sa.String(length=15),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('email')

    with op.batch_alter_table('unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active', sa.BOOLEAN(), nullable=False))
        batch_op.alter_column('unitName',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('student', schema=None) as batch_op:
        batch_op.alter_column('consent',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('studentNumber',
               existing_type=sa.String(length=15),
               type_=sa.INTEGER(),
               existing_nullable=False)

    with op.batch_alter_table('attendance', schema=None) as batch_op:
        batch_op.alter_column('consent_given',
               existing_type=sa.String(length=50),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
